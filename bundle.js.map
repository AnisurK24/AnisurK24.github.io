{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/grid.js","webpack:///./src/index.js","webpack:///./src/node.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAC0B;;;;AAI1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;;AAEA,uBAAuB,aAAa;AACpC,6BAA6B,IAAI,GAAG,IAAI;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA,SAAS;AACT;AACA;AACA,yBAAyB,UAAU;AACnC;AACA,SAAS;AACT;AACA;AACA;;AAEA,sBAAsB,6CAAI;AAC1B;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;;ACxLpB;AAAA;AAA0B;;;AAG1B;AACA,mBAAmB,6CAAI;;AAEvB;AACA,kDAAkD,6CAAI;;AAEtD,CAAC;;;AAGD,mC;;;;;;;;;;;;ACZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,mEAAI,EAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// import BuildTree from \"./search.js\";\nimport Node from \"./node\";\n\n\n\nclass Grid {\n  constructor($graph) {\n    this.$graph = $graph;\n\n    this.grid = [];\n    // this.nodes = [];\n    this.nodeObject = {};\n    this.start = null;\n    this.goal = null;\n\n    // this.height = 25;\n    // this.width = 62;\n    // this.gridSize = 75;\n\n    this.width = this.checkWidth();\n    this.height = this.checkHeight();\n    this.gridSize = this.checkGridSize();\n    this.gridStyle = this.checkGridGen();\n    this.clearGrid = this.clearGridBtn();\n    // console.log(this.nodes);\n    console.log(this.nodeObject);\n\n    $graph.empty();\n\n    // this.newGrid = this.newGrid.bind(this);\n    this.newGrid($graph);\n\n    // this.searchGraph = new SearchGraph(this.nodes);\n    // this.$cells = $graph.find(\".grid-cell\");\n    // this.$cells.bind(\"click\", e => this.clickCell($(e.target)));\n  }\n\n  newGrid($graph) {\n    const height = this.height;\n    const width = this.width;\n    const gridSize = this.gridSize;\n    const $cellHTML = $(\"<td />\");\n\n    $cellHTML\n      .width($graph.width() / gridSize - 1)\n      .height($graph.width() / gridSize - 1);\n\n    for (let row = 0; row < height; row++) {\n      let $rowHTML = $(\"<tr />\").addClass(\"grid-row\");\n      // const currentNodeRow = [];\n      const currentNodeORow = [];\n      const currentGridRow = [];\n\n      for (let col = 0; col < width; col++) {\n        const newNodeId = `${row}-${col}`;\n        let newNodeClass;\n        let newNode;\n\n        let $cell = $cellHTML.clone();\n        $cell\n          .attr(\"id\", newNodeId);\n          // .attr(\"x\", row)\n          // .attr(\"y\", col);\n\n        if (row === 1 && col === 1) {\n          newNodeClass = \"start\";\n          $cell.addClass(\"start\");\n          this.start = `${newNodeId}`;\n          // $cell.addClass(\"fas fa-dog\");\n        } else if (row === height - 2 && col === width - 2) {\n          newNodeClass = \"goal\";\n          $cell.addClass(\"goal\");\n          this.goal = `${newNodeId}`;\n          // $cell.addClass(\"fas fa-user\");\n        } else {\n          $cell.addClass(\"walkable\");\n          newNodeClass = \"walkable\";\n        }\n\n        newNode = new Node(newNodeId, newNodeClass);\n        // currentNodeRow.push(newNode);\n        $rowHTML.append($cell);\n        currentGridRow.push($cell);\n        this.nodeObject[`${newNodeId}`] = newNode;\n      }\n\n      this.grid.push(currentGridRow);\n      // this.nodes.push(currentNodeRow);\n      $graph.append($rowHTML);\n    }\n  }\n\n  checkGridSize() {\n    if (document.getElementById(\"grids_1\").checked) {\n      return 50;\n    } else if (document.getElementById(\"grids_2\").checked) {\n      return 75;\n    } else {\n      return 100;\n    }\n  }\n\n  checkHeight() {\n    if (this.checkGridSize() === 50) {\n      return 17;\n    } else if (this.checkGridSize() === 75) {\n      return 25;\n    } else {\n      return 33;\n    }\n  }\n\n  checkWidth() {\n    if (this.checkGridSize() === 50) {\n      return 42;\n    } else if (this.checkGridSize() === 75) {\n      return 62;\n    } else {\n      return 82;\n    }\n  }\n\n  clearGridBtn() {\n    document.getElementById(\"CGrid\").onclick = () => {\n      this.clearWalls();\n    };\n  }\n\n  clearWalls() {\n    Object.keys(this.nodeObject).forEach(node => {\n      let nodeHTML = document.getElementById(node);\n      let currentNode = this.nodeObject[node];\n      if (currentNode.status === \"block\") {\n      currentNode.status = \"walkable\";\n      nodeHTML.className = \"walkable\";\n      }\n    });\n  }\n\n  checkGridGen() {\n    document.getElementById(\"PGrid\").onclick = () => {\n      if (document.getElementById(\"gridg_1\").checked) {\n        this.clearWalls();\n        this.randomGridGen();\n      } else {\n        this.clearWalls();\n        this.mazeGridGen();\n      }\n    };\n  }\n\n  randomGridGen() {\n    Object.keys(this.nodeObject).forEach(node => {\n      let nodesToSkip = [\"start\", \"goal\"];\n      let nodeHTML = document.getElementById(node);\n      let blocked = Math.floor(Math.random() * 4);\n      if (!nodesToSkip.includes(nodeHTML.className) && blocked === 0) {\n        nodeHTML.className = \"block\";\n        this.nodeObject[node].status = \"block\";\n      }\n    });\n  }\n\n  mazeGridGen() {\n    let nodesToSkip = [this.grid.start, this.grid.goal];\n    // let outline = false;\n    // if (!outline) {\n      Object.keys(this.nodeObject).forEach(node => {\n        if (!nodesToSkip.includes(node)) {\n          let row = parseInt(node.split(\"-\")[0]);\n          let col = parseInt(node.split(\"-\")[1]);\n          let nodeHTML = document.getElementById(node);\n          if (row === 0 || col === 0 || row === this.height - 1 || col === this.width - 1) {\n            nodeHTML.className = \"block\";\n            // console.log(nodeHTML);\n            this.nodeObject[node].status = \"block\";\n          }\n          // outline = true;\n        }\n      });\n    // }\n  }\n}\n\nexport default Grid;\n\n","import Grid from \"./grid\";\n\n\n$(document).ready(() => {\n  const grid = new Grid($(\"#grid\"));\n\n  const $newGridBtn = document.getElementById(\"GGrid\");\n  $newGridBtn.addEventListener(\"click\", () => new Grid($(\"#grid\")));\n\n});\n\n\nconsole.log(\"Webpack is working!\");","class Node {\n  constructor(id, status) {\n      this.id = id;\n      this.status = status;\n      this.previousNode = null;\n      this.weight = 0;\n      this.path = null;\n    // this.x = x;\n    // this.y = y;\n    // this.pos = { x: this.x, y: this.y };\n    // this.weight = weight;\n\n    // this.f = 0;\n    // this.g = 0;\n    // this.h = 0;\n\n    // this.visited = false;\n    // this.closed = false;\n    // this.parent = null;\n  }\n}\n\nexport default Node;\n"],"sourceRoot":""}